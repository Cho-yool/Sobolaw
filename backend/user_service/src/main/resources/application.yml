server:
  port: 8001
  servlet:
    contextPath: "/api/user-service/"
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  application:
    name: user-service
  devtools:
    livereload:
      enabled: true
  datasource:
    hikari:
      driver-class-name: org.mariadb.jdbc.Driver
      username: S10P22A604
      password: qlpoh4yX1A
    url: jdbc:mariadb://stg-yswa-kr-practice-db-master.mariadb.database.azure.com:3306/S10P22A604?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8

  # social security
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ef322d7307420955f2517d792e85a41b
            client-secret: Rmct0Pj9dNMDgjGwt9gDuu1KSOaq8fUu
            redirect-uri: "https://j10a604.p.ssafy.io/api/user-service/oauth2/callback/kakao"
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope:
              - profile_nickname
              - account_email
          naver:
            client-id: zrnSAK6f3mzqWn2Nos_o
            client-secret: HdH2s7s9ci
            redirect-uri: "https://j10a604.p.ssafy.io/api/user-service/oauth2/callback/naver"
            authorization-grant-type: authorization_code
            scope: email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

  # jpa
  jpa:
    hibernate:
      naming:
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
      ddl-auto: update
    properties:
      hibernate:
        default_batch_fetch_size: 1000
#        show-sql: true
        format_sql: true

  # redis
  data:
    redis:
      host: redis
      port: 6379


#logging
logging:
  level:
    org.hibernate.SQL: INFO
    org.hibernate.orm.jdbc.bind: trace
    root: INFO
    org:
      springframework:
        web: INFO
        apache:
          tiles: DEBUG
        springframework:
          boot: DEBUG

eureka:
  client:
#     disable eureka discovery client
#    enabled: false
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://172.17.0.1:8761/eureka
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

# jwt
jwt:
  secret-key:
    access: "123testKeyValue123456testKeyValue456789testKeyValue789123testKeyValue123456testKeyValue456789testKeyValue789123testKeyValue123456testKeyValue456789testKeyValue789"
    refresh: "1q2w3e4r1q2w3e4r1q2w3e4r1q2w3e4r1q2w3e4r1q2w3e4r1q2w3e4r1q2w3e4r1q2w3e4r1q2w3e4r1q2w3e4r1q2w3e4r1q2w3e4r1q2w3e4r1q2w3e4r1q2w3e4r1q2w3e4r1q2w3e4r1q2w3e4r1q2w3e4r1q2w3e4r"
  expiration:
    access: "360000" # 1시간
    refresh: "259200000" # 30일